{"version":3,"sources":["../public/games sync /^/.//.*$","../public/games/bouloie/resources/bd 2.jpg","../public/games/bouloie/resources/bd.jpg","../public/games/bouloie/resources/distributeur 2.jpg","../public/games/bouloie/resources/distributeur.jpg","../public/games/bouloie/resources/fresque 2.png","../public/games/bouloie/resources/fresque.png","../public/games/jpo/resources/caillou.png","../public/games/jpo/resources/fresque.png","serviceWorkerRegistration.js","wrapper.js","components/map/placeInfo/description/Description.js","components/map/placeInfo/timetable/Timetable.js","components/map/placeInfo/contact/Contact.js","components/puzzle/answerForm/AnswerForm.js","components/puzzle/hint/Hint.js","components/map/placeInfo/PlaceInfo.js","components/puzzle/file/File.js","components/puzzle/Puzzle.js","components/map/placeInfo/startPuzzle/StartPuzzle.js","components/map/Map.js","components/ending/Ending.js","components/menu/tutorial/Tutorial.js","components/menu/intro/Intro.js","components/menu/Menu.js","components/app/App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Wrapper","filename","this","data","require","intro","parcours","length","entries","place","depart","currentPlace","suivants","nom","position","infos","enigme","Description","content","key","props","push","items","i","getContent","React","Component","Timetable","days","timetable","nbCols","hours","cells","hour","colSpan","Contact","coordonnees","telephone","src","alt","href","mail","web","label","AnswerForm","value","handleChange","bind","handleSubmit","event","type","form","document","getElementById","element","HTMLInputElement","target","checked","setState","onSubmit","placeholder","name","onChange","style","margin","arrayChoices","choices","htmlFor","onAnswerChange","preventDefault","Hint","handleRevealHint","onClick","revealed","revealedHints","showSavedHints","hints","currentContent","str","RegExp","test","without","rel","savedProgression","JSON","parse","localStorage","getItem","title","found","hint","trim","puzzleTitle","hintList","setItem","stringify","remove","alert","progression","hintObject","component","File","path","process","gameID","file","controls","showFile","Puzzle","puzzle","wrapper","getPuzzleForPlace","handleAnswerSubmission","handlerGoodAnswer","handlerRetry","showQuestion","revealHint","attempt","answer","toUpperCase","display","response","puzzleType","entitled","fileJsx","undefined","saved","question","paragraph","handlerClosePuzzle","StartPuzzle","touchstartX","touchendX","div","createElement","setAttribute","getElementsByClassName","appendChild","ReactDOM","render","callbackFunction","onTouchStart","changedTouches","screenX","onTouchEnd","showPuzzle","PlaceInfo","info","getPlaceInfo","getPlaceName","description","startPuzzle","handlerCloseInfo","class","childData","Ending","substring","indexOf","resume","geolocation","closeEnding","returnToMenu","Map","timer","setInterval","getCurrentPosition","checkPlayerCloseMarker","visited","current","next","getFirstPlace","playerPosition","tNext","tVisited","updateCurrent","getNextPlace","Array","isArray","includes","puzzleValidated","scrollTop","indexVal","splice","changeMarker","displayInfo","Marker","icon","getMarkerIcon","positions","pos","getPlacePosition","greenMarker","blueMarker","redMarker","markers","eventHandlers","click","handlerClickPin","MapContainer","center","zoom","minZoom","zoomControl","TileLayer","url","displayMarkers","displayPlayer","CenterRelativeToPins","useMap","fitBounds","getAllPinsPosition","cord","coords","playerPos","latitude","longitude","Math","abs","updateState","L","Icon","extend","options","iconUrl","iconSize","shadowSize","iconAnchor","shadowAnchor","Tutorial","step","nextStep","Circle","radius","handlerCloseTutorial","getMarkersTutorial","getExplanation","Intro","getIntro","nbPlaces","getNbPlaces","closeIntro","Menu","resumeButton","innerText","onclick","resumeGame","newGameButton","printGamesList","tutorialButton","addEventListener","showTutorial","menu","getGameList","innerHTML","gamesList","gameButton","returnButton","reload","App","className","copyTitle","copyBody","copyShareButtonLabel","copyAddHomeButtonLabel","copyClosePrompt","permanentlyHideOnDismiss","StrictMode","URL","origin","fetch","headers","contentType","get","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.1136b75b.chunk.js","sourcesContent":["var map = {\n\t\"./bouloie/bouloie\": 18,\n\t\"./bouloie/bouloie.json\": 18,\n\t\"./bouloie/resources/bd 2.jpg\": 31,\n\t\"./bouloie/resources/bd.jpg\": 32,\n\t\"./bouloie/resources/distributeur 2.jpg\": 33,\n\t\"./bouloie/resources/distributeur.jpg\": 34,\n\t\"./bouloie/resources/fresque 2.png\": 35,\n\t\"./bouloie/resources/fresque.png\": 36,\n\t\"./gameList\": 19,\n\t\"./gameList.json\": 19,\n\t\"./jpo/jpo\": 20,\n\t\"./jpo/jpo.json\": 20,\n\t\"./jpo/resources/caillou.png\": 37,\n\t\"./jpo/resources/fresque.png\": 38,\n\t\"./tutorial/tutorial\": 21,\n\t\"./tutorial/tutorial.json\": 21\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 30;","export default __webpack_public_path__ + \"static/media/bd 2.86a5459a.jpg\";","export default __webpack_public_path__ + \"static/media/bd.86a5459a.jpg\";","export default __webpack_public_path__ + \"static/media/distributeur 2.b381c9e9.jpg\";","export default __webpack_public_path__ + \"static/media/distributeur.55679cc5.jpg\";","export default __webpack_public_path__ + \"static/media/fresque 2.478f2767.png\";","export default __webpack_public_path__ + \"static/media/fresque.d8ef8880.png\";","export default __webpack_public_path__ + \"static/media/caillou.3b764930.png\";","export default __webpack_public_path__ + \"static/media/fresque.d8ef8880.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\n * Allow to get informations from the configuration file of the game\n */\n class Wrapper{\n     /**\n      * Constructor of wrapper of a configuration file\n      * @param {String} filename the name of the configuration file, \n      * by default use the file listing the available games\n      */\n    constructor(filename = \"gameList.json\"){\n        this.data = require(\"../public/games/\" + filename);\n    }\n\n    /**\n     * Get the list of available games\n     * @returns the list of games\n     */\n    getGameList(){\n        return this.data;\n    }\n\n    /**\n     * Get information relating to the introduction of the game\n     * @returns the introduction of the game\n     */\n    getIntro(){\n        return this.data.intro;\n    }\n\n    /**\n     * Get the number of places to visit during the game\n     * @returns the number of places\n     */\n    getNbPlaces(){\n        return Object.keys(this.data.parcours).length;\n    }\n\n    /**\n     * Get the first place of the course\n     * @returns the first place\n     */\n    getFirstPlace(){\n        for(let [place, infos] of Object.entries(this.data.parcours)) {\n            if(infos.depart){\n                return place;\n            }\n        }\n    }\n\n    /**\n     * Get the next place of the course\n     * @param {String} currentPlace the current place \n     * @returns an array of strings which represent the next place(s)\n     */\n    getNextPlace(currentPlace){\n        return this.data.parcours[currentPlace].suivants;\n    }\n\n    /**\n     * Get the name of a place\n     * @param {String} place the identifier of the place for which we want the name\n     * @returns the name of the place\n     */\n     getPlaceName(place){\n        return this.data.parcours[place].nom;\n    }\n\n    /**\n     * Get the geographical position of a place\n     * @param {String} place the place for which we want the geographical position\n     * @returns the geographical position of the place\n     */\n     getPlacePosition(place){\n        return this.data.parcours[place].position;\n    }\n\n    /**\n     * Get the informations related to a place\n     * @param {String} place the place for which we want the informations\n     * @returns the informations related to the place\n     */\n    getPlaceInfo(place){\n        return this.data.parcours[place].infos;\n    }\n\n    /**\n     * Get the puzzle associated to the place\n     * @param {String} place the place for which we want the puzzle \n     * @returns the puzzle associated to the place\n     */\n    getPuzzleForPlace(place){\n        return this.data.enigme[this.data.parcours[place].enigme];\n    }\n} export default Wrapper;","import React from 'react';\n\nimport './Description.css';\n\nclass Description extends React.Component{\n    /**\n     * Get the content of the place description\n     * @returns the content of the description\n     */\n    getContent(){\n        let content = [];\n        let key = 0;\n\n        for(let data of this.props.infos){\n            if(typeof data == \"string\"){ //A string for a simple paragraph\n                content.push(<p key={key}>{data}</p>);\n\n            }else{//An array of strings for a list of items\n                let items = [];\n\n                for(let i = 0; i < data.length; ++i){\n                    if(i < data.length-1){\n                        items.push(<li key={key}>{data[i]},</li>);\n                    }else{\n                        items.push(<li key={key}>{data[i]}.</li>);\n                    }\n                    key++;\n                }\n                content.push(<ul>{items}</ul>);\n            }\n            key++;\n        }\n\n        return content;\n    }\n\n    render(){\n        return(\n            <div id='description'>\n                {this.getContent()}\n            </div>\n        );\n    }\n    \n} export default Description;\n","import React from 'react';\n\nimport './Timetable.css';\n\nclass Timetable extends React.Component{\n    /**\n     * Get the content of the timetable\n     * @returns the timetable to display\n     */\n    getContent(){\n        let days = [\"Lundi\", \"Mardi\", \"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\", \"Dimanche\"];\n        let timetable = [];\n\n        let nbCols = 1; //To adapt the colspan\n        for(let i = 0; i < this.props.hours.length; ++i){\n            if(this.props.hours[i].length > nbCols){\n                nbCols = this.props.hours[i].length;\n            }\n        }\n\n        for(let i = 0; i < this.props.hours.length; ++i){\n            let cells = [];\n\n            if(this.props.hours[i].length){\n                for(let hour of this.props.hours[i]){\n                    cells.push(\n                        <td>\n                            {hour}\n                        </td>\n                    );\n                }\n            }else{\n                cells.push(\n                    <td colSpan={nbCols}>\n                        FERMÉ\n                    </td>\n                );\n            }\n            \n            timetable.push(\n                <tr>\n                    <td>\n                        {days[i]}\n                    </td>\n                    {cells}\n                </tr>\n            );\n        }\n\n        return timetable;\n    }\n\n    render(){\n        return(\n            <table id='timetable'>\n                <tbody>\n                    {this.getContent()}\n                </tbody>\n            </table>\n        );\n    }\n\n} export default Timetable;\n","import React from 'react';\n\nimport './Contact.css';\n\nclass Contact extends React.Component{\n    /**\n     * Get the content to display in the contact bloc\n     * @returns an array containing contact information\n     */\n    getContent(){\n        let content = [];\n\n        if(this.props.coordonnees.telephone){\n            content.push(\n                <tr>\n                    <td>\n                        <img src='./img/map/placeInfo/contact/phone.png'alt='logo téléphone'/>\n                    </td>\n                    <td>\n                        <a href={`tel:${this.props.coordonnees.telephone}`} data-rel=\"external\">{this.props.coordonnees.telephone}</a>\n                    </td>\n                </tr>\n            );\n        }\n        \n        if(this.props.coordonnees.mail){\n            content.push(\n                <tr>\n                    <td>\n                        <img src='./img/map/placeInfo/contact/email.png'alt='logo courrier'/>\n                    </td>\n                    <td>\n                        <a href={`mailto: ${this.props.coordonnees.mail}`}>{this.props.coordonnees.mail}</a>\n                    </td>\n                </tr>\n            );\n        }\n\n        if(this.props.coordonnees.web){\n            let label = (this.props.coordonnees.web[\"label\"])? this.props.coordonnees.web[\"label\"] : \"Site internet\";\n            content.push(\n                <tr>\n                    <td>\n                        <img src='./img/map/placeInfo/contact/web.png'alt='logo internet'/>\n                    </td>\n                    <td>\n                        <a href={this.props.coordonnees.web[\"lien\"]}>{label}</a>\n                    </td>\n                </tr>\n            );\n        }\n\n        return content;\n    }\n\n    render(){\n        return(\n            <div id='contact'>\n                <table>\n                    <tbody>\n                        {this.getContent()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n} export default Contact;\n","import React from 'react';\n\nimport './AnswerForm.css';\n\nclass AnswerForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {value: ''};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    /**\n     * Handler when select a response in a MCQ\n     * @param event the click event on the checkbox selected\n     */\n    handleChange(event){\n        if(this.props.type === \"QCM\"){\n            //Unchecked all checkbox excepted the one which is considered\n            const form = document.getElementById(\"answer\");\n            for(const element of form){ \n                if(element instanceof HTMLInputElement && element.type !== \"submit\" && element.value !== event.target.value && element.checked){\n                    element.checked = false;\n                }\n\n                if(event.target.checked){\n                    this.setState({value: event.target.value});\n                }else{\n                    this.setState({value: \"\"});\n                }\n            }\n        }else{\n            this.setState({value: event.target.value});\n        }\n    }\n\n    /**\n     * Display the answer form \n     */\n    componentDidMount(){\n        switch(this.props.type){\n            case \"QR\":\n                this.setState({content: \n                    <form onSubmit={this.handleSubmit} id=\"answer\">\n                        <input placeholder='Votre réponse :' type=\"text\" name=\"answer\" onChange={this.handleChange}/>\n                        <input type=\"submit\" style={{margin: \"5rem\"}} value=\"Soumettre la réponse\" />\n                    </form>}\n                );\n                break;\n            case \"QCM\":\n                let arrayChoices = [];\n                for(const element of this.props.choices){\n                    arrayChoices.push(\n                        <div>\n                            <input type=\"checkbox\" onChange={this.handleChange} key={element} value={element} name={element}/>\n                            <label htmlFor={element}>{element}</label>\n                        </div>\n                    );\n                }\n                this.setState({content: \n                    <form onSubmit={this.handleSubmit} id=\"answer\"> \n                        <div id='choices'>\n                            {arrayChoices}\n                        </div>      \n                        <input type=\"submit\" style={{margin: \"5rem\"}} value=\"Soumettre la réponse\"/>\n                    </form>}\n                ); \n                break;\n            default:\n                return;\n        }\n    }\n    \n    /**\n     * Handler when the player click on the button to submit his response\n     * @param event the click event on the submit button \n     */\n    handleSubmit(event){\n        this.props.onAnswerChange(this.state.value);\n        event.preventDefault();\n    }\n\n    render(){\n        return (\n            <div>\n                {this.state.content}\n            </div>\n        );\n    }\n} export default AnswerForm;","import React from 'react';\nimport './Hint.css';\n\nclass Hint extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleRevealHint = this.handleRevealHint.bind(this);\n        this.state = {content: <button id=\"hintsButton\" onClick={this.handleRevealHint}>Révéler un indice</button>, revealed: 0}; \n    }\n\n    /**\n     * Display the hints already revealed \n     */\n    componentDidMount(){\n        if(this.props.revealedHints){\n            this.showSavedHints();\n        }\n    }\n    \n    /**\n     * Handler when click on the button to reveal hint\n     */\n    handleRevealHint(){\n        if(this.state.revealed < this.props.hints.length){\n            let currentContent = [this.state.content];\n            this.setState({revealed: this.state.revealed+1});\n\n            let content = (isURL(this.props.hints[this.state.revealed]))? <a href={this.props.hints[this.state.revealed]} target=\"_blank\" without rel=\"noreferrer\">Consulter une ressource externe</a> : <h3 key={this.state.revealed}>{this.props.hints[this.state.revealed]}</h3>;\n            currentContent.push(content);\n            this.setState({content: currentContent});\n\n            let savedProgression = JSON.parse(localStorage.getItem(\"progression\"));\n            if(!savedProgression[\"revealedHints\"]){\n                savedProgression[\"revealedHints\"] = [];\n            }\n\n            const title = this.props.title;\n            let found = false;\n\n            for(const hint of savedProgression[\"revealedHints\"]){\n                if(hint[\"puzzleTitle\"].trim() === title.trim()){\n                    hint[\"hintList\"].push(this.props.hints[this.state.revealed]);\n                    found = true;\n                    break;\n                }\n            }\n            if(!found){\n                savedProgression[\"revealedHints\"].push({puzzleTitle: title, hintList: [this.props.hints[this.state.revealed]]});\n            }\n            \n            localStorage.setItem(\"progression\",JSON.stringify(savedProgression));\n        }else{\n            document.getElementById(\"hintsButton\").remove(); \n            alert(\"Tous les indices ont été révélés\");\n        }\n    }\n\n    /**\n     * Displays the hints already revealed in the case of a game resumption \n     */\n    showSavedHints(){\n        const progression = JSON.parse(localStorage.getItem(\"progression\"));\n        for(const hintObject of progression[\"revealedHints\"]){\n            if(hintObject[\"puzzleTitle\"]===this.props.title){\n                let currentContent = [this.state.content];\n                let i = 0;\n                for(const hint of hintObject[\"hintList\"]){      \n                    currentContent.push(<p key={i}>{hint}</p>);\n                    i++;\n                }\n                this.setState({content: currentContent, revealed: i});\n                break;\n            }\n        }\n    }\n\n    render(){\n        return (\n            <div id='hints'>\n                {this.state.content}\n            </div>\n        );\n    }\n\n} export default Hint;\n\n/**\n * Check if a string is an URL\n * @param str the string to check \n * @returns true if the string is an URL, false otherwise\n */\nfunction isURL(str) {\n    var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n      '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\n    return !!pattern.test(str);\n}","import React from 'react';\n\nimport Description from './description/Description';\nimport Timetable from './timetable/Timetable';\nimport Contact from './contact/Contact';\nimport StartPuzzle from './startPuzzle/StartPuzzle';\n\nimport './PlaceInfo.css';\n\nlet component;\nclass PlaceInfo extends React.Component{\n    constructor(props){\n        super(props);\n        component = this;\n    }\n\n    /**\n     * Close the popup when clicking on the close button\n     */\n    handlerCloseInfo(){\n        document.getElementById(\"infoDiv\").remove();\n    }\n\n    render(){\n        let info = this.props.wrapper.getPlaceInfo(this.props.place);\n        let name = this.props.wrapper.getPlaceName(this.props.place);\n        let description = info[\"description\"];\n        let startPuzzle = (this.props.puzzle)? <StartPuzzle wrapper={this.props.wrapper} gameID={this.props.gameID} place={this.props.place} callbackFunction={callbackFunction}/> : '';\n        \n        return(\n            <div id='placeInfo'>\n                <button onClick={this.handlerCloseInfo} id=\"closeButton\">X</button>\n\n                <h2>{name}</h2> \n\n                <Description infos={description}/>\n\n                {(info[\"horaires\"])? [<p class='sectionTitle'>Horaires</p>, <Timetable hours={info[\"horaires\"]}/>] : ''}\n\n                {(info[\"contact\"])? [<p class='sectionTitle'>Contact</p>, <Contact coordonnees={info[\"contact\"]}/>]: ''}\n                \n                {startPuzzle}\n            </div>\n        );\n    }\n    \n} export default PlaceInfo;\n\nfunction callbackFunction(childData) {\n    // console.log(childData);\n    component.props.response(component.props.place);\n}","import React from \"react\";\n\nimport './File.css';\n\nclass File extends React.Component{\n    /**\n     * Get an appropriate HTML element to display the content of the file\n     * @returns the file to show\n     */\n    showFile(){\n        const path = `${process.env.PUBLIC_URL}/games/${this.props.gameID}/resources/${this.props.file[\"src\"]}`;\n        switch(this.props.file[\"type\"]){\n            case \"picture\":\n                return <img alt={this.props.file[\"description\"]} src={path}/>;\n            case \"audio\":\n                return <audio controls src={path}/>;\n            case \"link\":\n                return <a href={this.props.file[\"src\"]}>{this.props.file[\"texte\"]}</a>;\n            case \"video\":\n                return <video controls src={path}/>;\n            default:\n                return false;\n        }\n    }\n    \n    render(){\n        return (\n           <div id=\"file\">\n              {this.showFile()}\n           </div>\n        );\n    }\n    \n} export default File;","import React from \"react\";\n\nimport AnswerForm from './answerForm/AnswerForm'\nimport Hint from './hint/Hint'\nimport File from \"./file/File\";\n\nimport './Puzzle.css';\n\nclass Puzzle extends React.Component{\n    constructor(props){\n        super(props);\n        this.puzzle = this.props.wrapper.getPuzzleForPlace(this.props.place);\n        this.handleAnswerSubmission = this.handleAnswerSubmission.bind(this);\n        this.handlerGoodAnswer = this.handlerGoodAnswer.bind(this);\n        this.handlerRetry = this.handlerRetry.bind(this);\n        this.showQuestion = this.showQuestion.bind(this);\n        this.state = {  hint: <button onClick={this.revealHint} id=\"hint\"/>, \n                        content: this.showQuestion(), \n                        attempt: 0};\n    }\n\n    /**\n     * Handler when an answer is submitted \n     * @param answer the answer submitted\n     */\n    handleAnswerSubmission(answer){\n        this.setState({attempt: this.state.attempt+1});\n        if(answer.toUpperCase().trim() === this.puzzle[\"reponse\"].toUpperCase().trim()){\n            let progression = JSON.parse(localStorage.getItem(\"progression\"));\n\n            if(!progression[\"puzzleValidated\"]){\n                progression[\"puzzleValidated\"] = [];\n            }\n\n            progression[\"puzzleValidated\"].push({title: this.puzzle[\"titre\"], attempt: this.state.attempt});\n            localStorage.setItem(\"progression\",JSON.stringify(progression));\n    \n            this.setState({content: <div><h2>C'est la bonne réponse !</h2><button onClick={this.handlerGoodAnswer} id=\"returnMap\">Retourner à la carte</button></div>});\n        }else{\n            this.setState({content: <div><h2>Mauvaise réponse !</h2><button id=\"retry\" onClick={this.handlerRetry}>Nouvelle tentative</button></div>});\n        }\n    }\n\n    /**\n     * Handler when the button to close is pressed\n     */\n    handlerClosePuzzle(){\n        document.getElementById(\"puzzleDiv\").remove();\n        document.getElementById(\"infoDiv\").style.display = \"block\";\n    }\n\n    /**\n     * Handler when a good answer is entered\n     */\n    handlerGoodAnswer(){\n        this.props.response(\"Good Response\");\n        document.getElementById(\"puzzleDiv\").remove();\n        document.getElementById(\"infoDiv\").remove();\n    }\n\n    /**\n     * Handler when the button to retry is pressed\n     */\n    handlerRetry(){\n        this.setState({content: this.showQuestion()});\n    }\n\n    /**\n     * Constructs the content of the question\n     */\n    showQuestion(){\n        const puzzleType = this.puzzle[\"type\"];\n        const title = this.puzzle[\"titre\"];\n        const entitled = this.puzzle[\"intitule\"];\n        const hints = this.puzzle[\"indices\"];\n        const file = this.puzzle[\"fichier\"];\n\n        const fileJsx = (file !== undefined) ? <File gameID={this.props.gameID} file={file}/> : \"\"; \n\n        let choices = (puzzleType === \"QCM\") ? this.puzzle[\"choix\"] : false;\n\n        const progression = JSON.parse(localStorage.getItem(\"progression\"));\n        let saved = false;\n        \n        if(progression && progression[\"revealedHints\"]){\n            for(const hintObject of progression[\"revealedHints\"]){\n                if(hintObject[\"puzzleTitle\"]===title){\n                    saved = true;\n                }\n            }\n        }\n    \n        let question = [];\n        let key = 0;\n        for (let paragraph of entitled){\n            question.push(<p key={key}>{paragraph}</p>);\n            key++;\n        }\n\n        return (\n            <div>\n                <button onClick={this.handlerClosePuzzle} id=\"closeButton\">X</button>\n                <h2 id=\"title\">{title}</h2>\n                <div id=\"question\">{question}</div>\n                {fileJsx}\n                <Hint revealedHints={saved} title={title} hints={hints}/>\n                <AnswerForm type={puzzleType} choices={choices} onAnswerChange={this.handleAnswerSubmission} id={this.props.id}/>\n            </div>\n        );\n    }\n    //puzzleInformations\n    render(){\n        return (\n           <div id=\"puzzle\"> \n               {this.state.content}\n           </div>\n        );\n    }\n} export default Puzzle;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Puzzle from '../../../puzzle/Puzzle';\n\nimport './StartPuzzle.css';\n\nclass StartPuzzle extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={touchstartX: 0, touchendX: 0}\n    }\n \n    /**\n     * Start a puzzle when clicking on the button \"Aller à l'énigme\"\n     */\n    showPuzzle(){\n        const div = document.createElement(\"div\");\n        div.setAttribute(\"id\", \"puzzleDiv\");\n\n        document.getElementById(\"infoDiv\").style.display = \"none\";\n        document.getElementsByClassName(\"App-header\")[0].appendChild(div);\n\n        ReactDOM.render(\n            <Puzzle wrapper={this.props.wrapper} place={this.props.place} gameID={this.props.gameID} response={this.props.callbackFunction} />, \n            document.getElementById(\"puzzleDiv\")\n        );\n    }\n\n    render(){\n        return(\n            <div id='startPuzzle' \n                onTouchStart={e => {this.touchstartX = e.changedTouches[0].screenX}}\n                onTouchEnd={e => {this.touchendX = e.changedTouches[0].screenX; this.showPuzzle()}}>\n\n                <p>Aller à l'énigme</p>\n                <img alt='' src='./img/map/placeInfo/startPuzzle/arrow.png'/>\n            </div>\n        );\n    }\n\n} export default StartPuzzle;","import React from 'react';\nimport ReactDOM from 'react-dom'\n\nimport {MapContainer, TileLayer, Marker, useMap} from 'react-leaflet';\nimport L from 'leaflet';\n\nimport PlaceInfo from './placeInfo/PlaceInfo';\nimport Ending from '../ending/Ending';\n\nimport './Map.css';\n\nlet component;\nclass Map extends React.Component {\n    constructor(props){\n        super(props);\n        component = this;\n        if(this.props.geolocation === true){\n            this.timer = window.setInterval(function(){navigator.geolocation.getCurrentPosition(checkPlayerCloseMarker);}, 1000);\n        }\n\n        //Get saved progression\n        const savedProgression = JSON.parse(localStorage.getItem(\"progression\"));\n        let progression = { title: savedProgression[\"title\"], \n                            visited: [], \n                            current: \"\", \n                            next: [this.props.wrapper.getFirstPlace()]};\n\n        //Resume the game\n        if(this.props.resume === true){\n            progression[\"title\"] = savedProgression[\"title\"];\n            progression[\"visited\"] = savedProgression[\"visited\"];\n            progression[\"current\"] = savedProgression[\"current\"];\n            progression[\"next\"] = savedProgression[\"next\"];\n        }else{\n            //Save the current progression in the localStorage\n            localStorage.setItem(\"progression\",JSON.stringify(progression));\n        }\n\n        this.state = {\n            visited : progression.visited, \n            current : progression.current,\n            next : progression.next,\n            playerPosition : []\n        };\n    }\n\n    /**\n     * Update the current, next and visited places when a puzzle is solved \n     * @param place the place for wich the puzzle is solved\n     */\n    updateState(place) {\n        //Remove place from current \n        let tCurrent = this.state.current;\n        let tNext = this.state.next;\n        let tVisited = this.state.visited;\n\n        tCurrent = \"\";\n        \n        //Update visited place\n        tVisited.push(place);\n    \n        //Update current place\n        let updateCurrent = this.props.wrapper.getNextPlace(place);\n        \n        if(Array.isArray(updateCurrent)){\n            for(let next of updateCurrent) {\n                if(!this.state.visited.includes(next)){\n                    let indexVal = tNext.indexOf(next);\n                    if (indexVal < 0) {\n                        tNext.push(next);\n                    }\n                }\n            }\n        }\n        \n        this.setState({visited: tVisited});\n        this.setState({next: tNext});\n        this.setState({current: tCurrent});\n\n        //All the places of the course were visited, the game is finish\n        if(this.state.next.length === 0){\n            ReactDOM.render(\n                <Ending/>,\n                document.getElementsByClassName(\"App-header\")[0]\n            );\n        }\n\n        //Save the current progression\n        let savedProgression = JSON.parse(localStorage.getItem(\"progression\"));\n        if(!savedProgression){\n            savedProgression = {visited: [], \n                                current: \"\", \n                                next: [], \n                                puzzleValidated: [], \n                                revealedHints: []};\n        }\n        savedProgression[\"visited\"] = tVisited;\n        savedProgression[\"current\"] = tCurrent;\n        savedProgression[\"next\"] = tNext;\n        localStorage.setItem(\"progression\",JSON.stringify(savedProgression));\n    }\n\n    /**\n     * Handler when the player is near a place, \n     * display a popup with informations on this place\n     */\n    displayInfo(place, puzzle = false){\n        const div = document.createElement(\"div\");\n        div.setAttribute(\"id\", \"infoDiv\");\n        document.getElementsByClassName(\"App-header\")[0].appendChild(div);\n\n        ReactDOM.render(\n            <PlaceInfo wrapper={this.props.wrapper} place={place} puzzle={puzzle} gameID={this.props.gameID} response = {callbackFunction}/>,\n            document.getElementById(\"infoDiv\")\n        );\n        \n        document.getElementById(\"placeInfo\").scrollTop = 0;\n    }\n\n    /**\n     * Function called to put the place in parameter in current place\n     * @param place the place to put as current\n     */\n    changeMarker(place){\n        let tNext = this.state.next;\n        if(this.state.current !== \"\"){\n             tNext.push(this.state.current);\n        }\n\n        let indexVal = tNext.indexOf(place);\n        if (indexVal > -1) {\n            tNext.splice(indexVal, 1);\n        }\n\n        this.setState({next: tNext});\n        this.setState({current: place});\n\n        //Enregistrement de la progression\n        let savedProgression = JSON.parse(localStorage.getItem(\"progression\"));\n        if(!savedProgression || savedProgression[\"presentation\"] ){\n            savedProgression = {visited: [], \n                                current: \"\", \n                                next: [], \n                                puzzleValidated: [], \n                                revealedHints: []};\n        }\n        savedProgression[\"visited\"] = this.state.visited;\n        savedProgression[\"current\"] = this.state.current;\n        savedProgression[\"next\"] = this.state.next;\n        localStorage.setItem(\"progression\",JSON.stringify(savedProgression));\n    }\n    \n    /**\n     * Handler when the player click on a marker (use in degraded mode without GPS)\n     * @param place the place on which the player clicked\n     * @param puzzle indicate if a puzzle must be proposed or not\n     */\n    handlerClickPin(place, puzzle = false){\n        this.changeMarker(place);\n        this.displayInfo(place, puzzle);\n    }\n\n    /**\n     * Get the marker of the player to display on the map\n     * @returns the marker of the player\n     */\n    displayPlayer(){\n        if(this.props.geolocation === true && this.state.playerPosition.length !== 0){\n            return <Marker position={this.state.playerPosition} icon={getMarkerIcon(\"player\")} key={this.state.playerPosition[1]}/>;\n        }\n    }\n\n    /**\n     * Get the geographic position of all displayed location markers \n     * @returns an array of geographic position\n     */\n    getAllPinsPosition(){\n        let positions = [];    \n        for(let place of this.state.visited){\n            let pos = this.props.wrapper.getPlacePosition(place);\n            positions.push(pos);\n        }            \n        if(this.state.current.length !== 0){    \n            let pos = this.props.wrapper.getPlacePosition(this.state.current);\n            positions.push(pos);\n        }\n        for(let place of this.state.next){\n            let pos = this.props.wrapper.getPlacePosition(place);\n            positions.push(pos);    \n        }\n        if(!Array.isArray(positions[0]) ){\n            positions.push(this.props.wrapper.getPlacePosition(this.props.wrapper.getFirstPlace()));\n        }\n        return positions;\n    }\n    \n    /**\n     * Get the markers for the places to display on the map\n     *  - green markers for places visited\n     *  - blue markers for the current place\n     *  - red markers for next places to visit\n     * @returns an array of markers to display\n     */\n    displayMarkers(){\n        var greenMarker = getMarkerIcon(\"green\");\n        var blueMarker = getMarkerIcon(\"blue\");\n        var redMarker = getMarkerIcon(\"red\");\n\n        var markers = []; \n        let key = 0;\n\n        //The places visited\n        for(let place of this.state.visited){\n            let position = this.props.wrapper.getPlacePosition(place);\n            markers.push(<Marker eventHandlers={{click: () => this.displayInfo(place)}} position={position} icon={greenMarker} key={key}/>);\n            key++;\n        }\n\n        //The current place\n        if(this.state.current){\n            let position = this.props.wrapper.getPlacePosition(this.state.current);\n            markers.push(<Marker eventHandlers={{click: () => this.displayInfo(this.state.current, true)}} position={position} icon={blueMarker} key={key}/>);\n            key++;\n        }\n\n        //The next places to visit\n        for(let place of this.state.next){\n            let position = this.props.wrapper.getPlacePosition(place); \n            markers.push(<Marker position={position} eventHandlers={{click: () => this.handlerClickPin(place, true)}}  icon={redMarker} key={key}/>);\n            key++;\n        }\n\n        return markers;\n    }\n\n    render() {\n        return (\n            <MapContainer id=\"map\"\n                center = {this.props.wrapper.getPlacePosition(this.props.wrapper.getFirstPlace())} zoom = {17} minZoom = {3} zoomControl={false}>\n                <TileLayer url = \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"/>\n                {this.displayMarkers()}\n                {this.displayPlayer()}\n                <CenterRelativeToPins/>\n            </MapContainer>  \n        );\n    }\n\n} export default Map;\n\n/**\n * Center the map according to place markers \n * @returns \n */\nfunction CenterRelativeToPins() {\n    const map = useMap();\n    map.fitBounds(component.getAllPinsPosition());\n    return null;\n}\n\n\n/**\n * Check that the player using his geolocation is close to a place to visit\n * @param pos the position of the place\n */\nfunction checkPlayerCloseMarker(pos){\n    let cord = pos.coords;\n    let playerPos = [];\n    playerPos.push(cord.latitude);\n    playerPos.push(cord.longitude);\n    component.setState({playerPosition: playerPos});\n    for(let place of component.state.next){\n        let pos = component.props.wrapper.getPlacePosition(place);\n        if(Math.abs((pos[0] + pos[1]) - (cord.latitude + cord.longitude)) < 0.00012){\n            component.changeMarker(place);\n        }\n    }\n}\n\nfunction callbackFunction(place) {\n    component.updateState(place);\n}\n\n/**\n * Return a specific marker icon\n * @param {String} icon the type of icon (a colored pin or the player icon)\n * @returns the marker icon desired\n */\nfunction getMarkerIcon(icon){\n    var customIcon = L.Icon.extend({\n        options: {\n            iconUrl: \"./img/map/marker_\" + icon + \".png\", // picture of the marker\n            iconSize:     [30, 30], // size of the marker\n            shadowSize:   [30, 30], // size of the shadow\n            iconAnchor:   [10, 30], // point of the icon which will correspond to marker's location\n            shadowAnchor: [10, 30], // the same for the shadow\n        }\n    });\n\n    return new customIcon();\n}\t","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Menu from '../menu/Menu';\nimport Map from \"../map/Map\";\nimport Wrapper from \"../../wrapper\";\n\nimport './Ending.css';\n\nclass Ending extends React.Component{\n    /**\n     * Return to the main menu of the game\n     */\n    returnToMenu(){\n        ReactDOM.render(\n            <Menu/>,document.getElementsByClassName(\"App-header\")[0]\n        );\n    }\n\n    /**\n     * Close the end page to display the map\n     */\n    closeEnding(){\n        let savedProgression = JSON.parse(localStorage.getItem(\"progression\"));\n        let title = savedProgression[\"title\"];\n        let gameID = title.substring(0, title.indexOf(\"/\"));\n        const wrapper = new Wrapper(title);\n\n        ReactDOM.render(\n            <Map resume={true} wrapper={wrapper} geolocation={true} gameID={gameID}/>,\n            document.getElementsByClassName(\"App-header\")[0]\n        );\n    }\n\n\n    render(){\n        return (\n            <div id=\"ending\">\n                <h2>Félicitation, vous avez terminé le parcours</h2>\n                <p>Merci d'avoir joué !</p>\n                <button onClick={this.closeEnding}>Retourner à la carte</button>\n                <button onClick={this.returnToMenu}>Retourner au menu</button>\n                <footer>Cette application a été réalisée par 3 étudiants en informatique dans le cadre du projet de licence 3, sous la tutelle de <a href=\"https://www.femto-st.fr/fr/personnel-femto/fdadeau\">Frédéric Dadeau</a>, maître de conférence à l'Université de Franche-Comté.</footer>\n            </div>\n        );\n    }\n    \n} export default Ending;","import React from \"react\";\nimport ReactDOM from 'react-dom';\n\nimport {MapContainer, TileLayer, Marker,Circle} from 'react-leaflet';\nimport L from 'leaflet';\n\nimport Wrapper from \"../../../wrapper\";\nimport PlaceInfo from '../../map/placeInfo/PlaceInfo';\nimport Menu from '../../menu/Menu';\n \nimport './Tutorial.css';\n\nlet component ;\nclass Tutorial extends React.Component{\n    constructor(props){\n        super(props);\n        component = this;\n        this.state = {step : 1};\n        this.wrapper = new Wrapper(\"tutorial/tutorial.json\");\n    }\n\n    /**\n     * Handler when the player is near a place, \n     * display a popup with informations on this place\n     */\n     displayInfo(place, puzzle = false){\n        const div = document.createElement(\"div\");\n        div.setAttribute(\"id\", \"infoDiv\");\n        document.getElementsByClassName(\"App-header\")[0].appendChild(div);\n\n        ReactDOM.render(\n            <PlaceInfo wrapper={this.wrapper} place={place} puzzle={puzzle} response = {callbackFunction}/>,\n            document.getElementById(\"infoDiv\")\n        );\n        \n        document.getElementById(\"placeInfo\").scrollTop = 0;\n    }\n\n    /**\n     * Get the markers to display for each step of the tutorial\n     * @returns an array of markers to display\n     */\n    getMarkersTutorial(){\n        var greenMarker = getMarkerIcon(\"green\");\n        var blueMarker = getMarkerIcon(\"blue\");\n        var redMarker = getMarkerIcon(\"red\");\n\n        var markers = [];\n\n        switch(this.state.step){\n            case 4 :\n            case 1 :\n                markers.push(<Marker position={[41.89005, 12.49225]} eventHandlers={{click: () => this.nextStep()}} icon={redMarker}/>);\n                markers.push(<Circle center={[41.89010, 12.49230]} radius={25}/>);\n                break;\n            case 2 :\n                markers.push(<Marker position={[41.89005, 12.49225]} eventHandlers={{click: () => this.displayInfo(\"colisee\", true)}} icon={blueMarker}/>);\n                markers.push(<Marker position={[41.88994, 12.49209]} icon={getMarkerIcon(\"player\")}/>);\n                break;\n            case 3 :\n                markers.push(<Marker position={[41.89005, 12.49225]} eventHandlers={{click: () => this.displayInfo(\"colisee\", false)}} icon={greenMarker}/>);                \n                markers.push(<Marker position={[41.88976, 12.49067]} eventHandlers={{click: () => this.nextStep()}} icon={redMarker}/>);\n                markers.push(<Marker position={[41.89061, 12.49148]} eventHandlers={{click: () => this.nextStep()}} icon={redMarker}/>);\n                markers.push(<Marker position={[41.88994, 12.49209]} icon={getMarkerIcon(\"player\")}/>);\n                break;\n            default :\n                break;\n        }\n\n        return markers;\n    }\n\n    /**\n     * Get the explanation to display for each step of the tutorial\n     * @returns the explanation to display\n     */\n    getExplanation(){\n        let content = [];\n        content.push(<button onClick={this.handlerCloseTutorial} id=\"closeButton\">X</button>);\n        switch(this.state.step){\n                case 4 :\n                case 1 :\n                    content.push(\n                        <div id=\"explanation\">\n                            <p>Les marqueurs rouges indiquent un lieu clé du parcours.</p>\n                            <p>En s'y approchant suffisamment, dans un périmètre proche délimité ici en bleu, des informations sur ce lieu vous seront données.</p> \n                            <p>Dans le cas où le GPS n'est pas activé il est possible d'accéder à ces informations en cliquant sur le marqueur du lieu une fois sur place.</p>\n                        </div>\n                    );\n                    break;\n                case 2 :\n                    content.push(\n                        <div id=\"explanation\">\n                            <p>Une fois votre personnage à proximité du lieu, le marqueur devient bleu et vous pouvez accéder aux informations et à l'énigme relative au lieu en cliquant dessus.</p>\n                        </div>\n                    );\n                    break;\n                case 3 :\n                    content.push(\n                        <div id=\"explanation\">\n                            <p>Une fois l'énigme résolue le marqueur devient vert pour indiquer que ce lieu a été visité, ses informations sont toujours consultables, et les prochains lieux à visiter apparaissent en rouge.</p>\n                            <p>Vous disposez désormais de toutes les informations nécessaires au fonctionnement du jeu.</p>\n                        </div>);\n                    break;\n                default :\n                    break;    \n                }\n        return content;\n    }\n\n    /**\n     * Go to the next step of the tutorial\n     */\n     nextStep(){\n        if(this.state.step === 4){\n            this.setState({step: 1});\n        }else{\n            this.setState({step: this.state.step + 1});\n        }\n    }\n\n    /**\n     * Close the tutorial and return to the main menu\n     */\n    handlerCloseTutorial(){\n        ReactDOM.render(\n            <Menu/>, document.getElementsByClassName(\"App-header\")[0]\n        );\n    }\n\n    render(){\n        return (\n            <MapContainer id=\"tutorial\"\n                center={[41.891404245383384, 12.491716829545517]}\n                zoom = {17} minZoom = {3} zoomControl={false}>\n\n                <TileLayer url = \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"/>\n                \n                {this.getMarkersTutorial()}\n                {this.getExplanation()}\n            </MapContainer>\n        );\n    }\n\n} export default Tutorial;\n\nfunction callbackFunction() {\n    component.nextStep();\n}\n\n/**\n * Return a specific marker icon\n * @param {String} icon the type of icon (a colored pin or the player icon)\n * @returns the marker icon desired\n */\nfunction getMarkerIcon(icon){\n    var customIcon = L.Icon.extend({\n        options: {\n            iconUrl: \"./img/map/marker_\" + icon + \".png\", // picture of the marker\n            iconSize:     [30, 30], // size of the marker\n            shadowSize:   [30, 30], // size of the shadow\n            iconAnchor:   [10, 30], // point of the icon which will correspond to marker's location\n            shadowAnchor: [10, 30], // the same for the shadow\n        }\n    });\n\n    return new customIcon();\n}","import React from \"react\";\n\nimport './Intro.css';\n\nclass Intro extends React.Component{\n    constructor(props){\n        super(props);\n        this.wrapper = this.props.wrapper;\n    }\n\n    /**\n     * Close the game introduction page to display the map\n     */\n    closeIntro(){\n        document.getElementById(\"intro\").style.display = \"none\";\n    }\n\n    render(){\n        let intro = this.wrapper.getIntro();\n        let nbPlaces = (this.wrapper.getNbPlaces() > 1) ? `${this.wrapper.getNbPlaces()} lieux et énigmes composent ce parcours.` : `Ce parcours comporte un unique lieu à visiter.`; \n\n        return (\n            <div id=\"intro\">\n                <h2 key=\"title\">{intro[\"titre\"]}</h2>\n                <p key=\"context\">{intro[\"contexte\"]}</p>\n                <p key=\"nbPlaces\">{nbPlaces}</p>\n                <p key=\"instructions\">{intro[\"consignes\"]}</p>\n                <button onClick={this.closeIntro} key=\"play\">Jouer</button>\n            </div>\n        );\n    }\n    \n} export default Intro;","import React from \"react\";\nimport ReactDOM from 'react-dom'\n\nimport Wrapper from \"../../wrapper\";\nimport Map from \"../map/Map\";\nimport Tutorial from \"./tutorial/Tutorial\";\nimport Intro from \"./intro/Intro\";\n\nimport './Menu.css';\n\nclass Menu extends React.Component{\n    /**\n     * Print the buttons to continue or start a new game and the button to see the tutorial\n     */\n    componentDidMount(){\n        const options = document.createElement(\"div\");\n        options.setAttribute(\"id\",\"options\");\n\n        //Search an existing game progression in the local storage\n        if(JSON.parse(localStorage.getItem(\"progression\"))){\n            //Create the continue button\n            const resumeButton = document.createElement(\"button\");\n            resumeButton.innerText = \"Continuer la partie en cours\";\n            resumeButton.onclick = this.resumeGame;\n            options.appendChild(resumeButton);\n        }\n\n        //Create the new game button\n        const newGameButton = document.createElement(\"button\");\n        newGameButton.innerText = \"Démarrer une nouvelle partie\";\n        newGameButton.onclick = this.printGamesList;\n        options.appendChild(newGameButton);\n\n        //Create the tutorial button\n        const tutorialButton = document.createElement(\"button\");\n        tutorialButton.addEventListener(\"click\", this.showTutorial);\n        tutorialButton.innerText = \"Comment jouer\";\n        options.appendChild(tutorialButton);\n\n        //Add the buttons to the menu\n        document.getElementById(\"menu\").appendChild(options);\n    }\n\n    /**\n     * Show the tutorial of the game\n     */\n    showTutorial(){\n        let menu = document.getElementById(\"menu\");\n        const div = document.createElement(\"div\");\n        div.setAttribute(\"id\", \"tutorial\");\n        document.getElementsByClassName(\"App-header\")[0].appendChild(div);\n\n        ReactDOM.render(\n            <Tutorial/>, document.getElementsByClassName(\"App-header\")[0]\n        );\n        menu.appendChild(div);\n    }\n\n    /**\n     * Resume a game in progress\n     */\n    resumeGame(){\n        let savedProgression = JSON.parse(localStorage.getItem(\"progression\"));\n        let title = savedProgression[\"title\"];\n        const wrapper = new Wrapper(title);\n        let gameID = title.substring(0, title.indexOf(\"/\"));\n\n        ReactDOM.render(\n            <Map resume={true} wrapper={wrapper} geolocation={true} gameID={gameID}/>,\n            document.getElementsByClassName(\"App-header\")[0]\n        );\n    }\n\n    /**\n     * Print the list of the available games\n     */\n    printGamesList(){\n        const data = new Wrapper().getGameList();\n        const menu = document.getElementById(\"menu\");\n        menu.innerHTML = \"\";\n        \n        const title = document.createElement(\"h2\");\n        title.innerText = \"Choisissez un parcours\";\n        menu.appendChild(title);\n\n        const gamesList = document.createElement(\"div\");\n        gamesList.setAttribute(\"id\", \"gamesList\");\n\n        for(let [gameID, title] of Object.entries(data)){\n            const gameButton = document.createElement(\"button\");\n            gameButton.setAttribute(\"class\", \"game\");\n            gameButton.setAttribute(\"id\", gameID);\n            gameButton.setAttribute(\"key\", gameID);\n            gameButton.innerText = title;\n\n            gamesList.appendChild(gameButton);\n\n            gameButton.addEventListener(\"click\", function(){\n                //Save the current progression\n                let savedProgression = {title: `${gameID}/${gameID}.json`, \n                                        visited: [], \n                                        current: \"\", \n                                        next: [], \n                                        puzzleValidated: [], \n                                        revealedHints: []};\n                localStorage.setItem(\"progression\",JSON.stringify(savedProgression));\n\n                //Create a wrapper for the file of the selected game\n                const wrapper = new Wrapper(`${gameID}/${gameID}.json`);\n\n                ReactDOM.render(\n                    [<Map resume={false} wrapper={wrapper} geolocation={true} gameID={gameID}/>,\n                    <Intro wrapper={wrapper}/>],\n                    document.getElementsByClassName(\"App-header\")[0]\n                );\n            });\n            menu.appendChild(gamesList);\n        }\n\n        //The button to return to the main menu\n        const returnButton = document.createElement(\"button\");\n        returnButton.innerText = \"Retourner au menu\";\n        returnButton.setAttribute(\"id\", \"returnMenu\");\n        returnButton.addEventListener(\"click\", function(){\n            // ReactDOM.render(\n            //     <Menu/>,document.getElementsByClassName(\"App-header\")[0]\n            // );\n            window.location.reload();\n        });\n\n        menu.appendChild(returnButton);\n    }\n    \n    render(){\n        return (\n            <div id=\"menu\">\n                <h1>Jeu de piste</h1>\n            </div>\n        );\n    }\n} export default Menu;","import React from 'react';\n\nimport PWAPrompt from 'react-ios-pwa-prompt'\nimport Menu from '../menu/Menu';\n\nimport './App.css';\n\nclass App extends React.Component{\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<Menu/>\n\t\t\t\t\t<PWAPrompt \tcopyTitle=\"Ajouter à l'écran d'accueil\" \n\t\t\t\t\t\t\t\tcopyBody=\"Ajoutez l'application à votre écran d'accueil pour l'utiliser en plein écran et hors ligne\"\n\t\t\t\t\t\t\t\tcopyShareButtonLabel=\"1) Appuyez sur le bouton pour partager\"\n\t\t\t\t\t\t\t\tcopyAddHomeButtonLabel=\"2) Sélectionnez 'Ajouter à l'écran d'accueil'\"\n\t\t\t\t\t\t\t\tcopyClosePrompt=\"Annuler\"\n\t\t\t\t\t\t\t\tpermanentlyHideOnDismiss={false}/>\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n} export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport App from './components/app/App';\n\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();"],"sourceRoot":""}